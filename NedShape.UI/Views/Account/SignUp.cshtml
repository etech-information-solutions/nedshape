@model NedShape.UI.Models.SignUpViewModel

<link href="~/Content/SignUp.css" rel="stylesheet" />
<link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/font-awesome.css" rel="stylesheet" />
<link href="~/Content/Index.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/account.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@using NedShape.Core.Enums;
@using NedShape.Data.Models;
@using NedShape.UI.Models;

@{
    ViewBag.Title = "Sign Up";

    List<string> monthNames = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.MonthNames.Where(m => !string.IsNullOrEmpty(m)).ToList();

    BankDetailViewModel bank = (Model.BankDetails != null) ? Model.BankDetails : new BankDetailViewModel() { };
    AddressViewModel address = (Model.Addresses != null && Model.Addresses.Any()) ? Model.Addresses.FirstOrDefault() : new AddressViewModel() { };

    @*string[] dob = (Model.DateOfBirth != null) ? Model.DateOfBirth.ToString("yyyy/MM/dd").Split('/') : null;*@
}


<body class=" sign-in sign-up">

    <div class="col-lg-offset-1 col-lg-10 col-md-offset-1 col-md-10 col-sm-offset-0 col-sm-12 form-style">
        <div class="col-lg-12 col-md-12 col-sm-12 top-bar ">
            <div class="btn-group left-group" role="group">
                <input type="button" value="Home" class="left-button" onclick="window.location.href='/Home/Index'" />
                <input type="button" value="About" class="left-button" />
                <input type="button" value="Services" class="left-button" />
                <input type="button" value="Contact" class="left-button" />
                <input type="button" value="Sign-up" class="left-button" onclick="window.location.href='/Account/SignUp'" />
            </div>

            <div class="middle-group-1" role="group">
                <span class="nedshape-login">Nedshape</span>
            </div>
            <div class="middle-group-2" role="group">

                <input type="button" value="Log in" class="login-button" onclick="window.location.href='/Account/Login'" />
            </div>


            <div class="right-group" role="group">
                <button type="button" class="social-button btn btn-secondary">
                    <a href="http://www.facebook.com/nedshape" data-content="http://www.facebook.com/nedshape">
                        <div>
                            <img class="social-image" src="https://static.wixstatic.com/media/23fd2a2be53141ed810f4d3dcdcd01fa.png/v1/fill/w_19,h_19,al_c,q_80,usm_0.66_1.00_0.01/23fd2a2be53141ed810f4d3dcdcd01fa.webp">
                        </div>
                    </a>
                </button>
                <button type="button" class="social-button btn btn-secondary">
                    <a href="http://www.twitter.com/nedshape" data-content="http://www.twitter.com/nedshape">
                        <div>
                            <img class="social-image" src="https://static.wixstatic.com/media/01ab6619093f45388d66736ec22e5885.png/v1/fill/w_19,h_19,al_c,q_80,usm_0.66_1.00_0.01/01ab6619093f45388d66736ec22e5885.webp">
                        </div>
                    </a>
                </button>
                <button type="button" class="social-button btn btn-secondary">
                    <a href="http://youtube.com/user/nedshape" data-content="http://youtube.com/user/nedshape">
                        <div>
                            <img class="social-image" src="https://static.wixstatic.com/media/203dcdc2ac8b48de89313f90d2a4cda1.png/v1/fill/w_18,h_19,al_c,q_80,usm_0.66_1.00_0.01/203dcdc2ac8b48de89313f90d2a4cda1.webp">
                        </div>
                    </a>
                </button>
                <button type="button" class="social-button btn btn-secondary">
                    <a href="http://instagram.com/nedshape" data-content="http://instagram.com/nedshape">
                        <div>
                            <img class="social-image" src="https://static.wixstatic.com/media/81af6121f84c41a5b4391d7d37fce12a.png/v1/fill/w_19,h_19,al_c,q_80,usm_0.66_1.00_0.01/81af6121f84c41a5b4391d7d37fce12a.webp">
                        </div>
                    </a>
                </button>
            </div>
        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 sign-up-logo">
            Sign Up
        </div>


        @using (Html.BeginForm("SignUp", "Account", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return NS.UI.DataValidateForm($(this))", id = "sign-up-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

    <div class="col-lg-7  col-md-7 col-sm-7 form-column-left">


        <div class="col-lg-12 gym-member editor-field">
            Sign up as a member or a gym?
            <label class="member-check">
                <input name="YesMEMBER" value="1" type="radio" @((Model.YesMEMBER == YesNo.Yes) ? "checked=checked" : "") style="margin-top: 1px;" /> Member
            </label>
            <label class="member-check">
                <input name="YesMEMBER" value="0" type="radio" @((Model.YesMEMBER == YesNo.No) ? "checked=checked" : "") style="margin-top: 1px;" /> Gym
            </label>
        </div>

        <div class="editor-field col-lg-12 padding-none">

            <label class="label-text">
                NAME
            </label>

            @Html.TextBoxFor(model => model.Name, new { @class = "input input-box", @placeholder = "Your First Name" })

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.Name)

        </div>

        <div class="editor-field col-lg-12 padding-none">
            <label class="label-text">
                SURNAME
            </label>

            @Html.TextBoxFor(model => model.Surname, new { @class = "input input-box", @placeholder = "Your Surname" })

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.Surname)

        </div>

        <div class="editor-field col-lg-12 padding-none">

            <label class="label-text">
                ID/PASSPORT
            </label>

            @Html.TextBoxFor(model => model.IdNumber, new { @class = "input input-box", @placeholder = "Your ID Number" })

            <label class="id-input">
                <input id="IsSAId-No" name="IsSAId" value="0" type="radio" @((Model.IsSAId == YesNo.No) ? "checked=checked" : "") style="margin-top: 1px;" /> Other
            </label>

            <label class="id-input">
                <input id="IsSAId-Yes" name="IsSAId" value="1" type="radio" @((Model.IsSAId == YesNo.Yes) ? "checked=checked" : "") style="margin-top: 1px;" /> SA ID
            </label>


            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.IdNumber)

        </div>
        <script>
            var val = document.getElementById("IdNumber");
            MessageBox.Show(val); 
        </script>
        <div class="editor-field col-lg-12 padding-none">

            <label class="label-text">
                DATE OF BIRTH
            </label>

            @*@Html.HiddenFor(model => model.DateOfBirth)*@

            @*                    <div class="right dropdown-style">
                <select id="dob-year" data-dob="1" data-name="year" class="chzn" required="required" style="width: 100%;">
                    <option value="">-- Year</option>

                    @for (int i = DateTime.Now.Year; i > 1939; i--)
                    {
                        string sel = (dob != null && dob.Length >= 1 && dob[0] == i.ToString()) ? "selected=selected" : "";

                        <option value="@i" @sel>@i</option>
                    }
                </select>
            </div>

            <div class="right dropdown-style">
                <select id="dob-month" data-dob="1" data-name="month" class="chzn" required="required" style="width: 100%;">
                    <option value="">-- Month</option>

                    @for (int i = 0; i < 12; i++)
                    {
                        string m = monthNames[i];

                        string sel = (dob != null && dob.Length >= 2 && dob[1] == (i + 1).ToString()) ? "selected=selected" : "";

                        <option value="@(i + 1)" @sel>@m</option>
                    }
                </select>
            </div>

            <div class="right dropdown-style">
                <select id="dob-day" data-dob="1" data-name="day" class="chzn" required="required" style="width: 100%;">
                    <option value="">-- Day</option>

                    @for (int i = 1; i < 32; i++)
                    {
                        string d = (i >= 10) ? "" + i : "0" + i;

                        string sel = (dob != null && dob.Length >= 3 && dob[2] == i.ToString()) ? "selected=selected" : "";

                        <option value="@i" @sel>@d</option>
                    }
                </select>
            </div>*@


            @* <input type="date" name="DateOfBirth">*@
            <input class="input input-box date-picker hasDatepicker valid" id="dateBirthPick" name="DateOfBirth" placeholder="Your Date of Birth" type="date">

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.DateOfBirth)

        </div>

        @*      <div class="editor-field col-lg-12 padding-none">
            <label class="label-text">
                TAX NUMBER
            </label>

            @Html.TextBoxFor(model => model.TaxNumber, new { @class = "input input-box", @placeholder = "Your Tax Number" })

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.TaxNumber)

        </div>*@



        <div class="editor-field col-lg-12 padding-none">
            <label class="label-text">
                CELL NUMBER
            </label>

            @Html.TextBoxFor(model => model.Cell, new { @class = "input input-box", @placeholder = "Your Cellphone Number" })

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.Cell)

        </div>

        @*<div id="confirm-cell" class="@( ( Model.PaymentMethod == PaymentMethod.Bank ) ? "block" : "none" ) none editor-field">
            <label style="display: inline-block; float: left; text-align: left; margin: 7px 0 0 0; color: #848484;">
                CONFIRM CELL NUMBER
            </label>

            @Html.TextBoxFor( model => model.ConfirmCell, new { @class = "input", @placeholder = "Confirm your Cellphone Number", @style = "float: right; display: inline-block; width: 60%;" } )

            <div class="clear"></div>

            @Html.ValidationMessageFor( model => model.ConfirmCell )

        </div>*@



        <div class="editor-field col-lg-12 padding-none">
            <label class="label-text">
                EMAIL
            </label>

            @Html.TextBoxFor(model => model.Email, new { @class = "input input-box", @placeholder = "Your Email Address" })

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.Email)
        </div>


        <!-- START: Address Details -->
        <input id="Addresses_AddressType" name="Addresses[0].AddressType" type="hidden" value="@( ( int ) AddressType.Postal )" />

        <div class="editor-field col-lg-12  padding-none">

            <label class="label-text">
                PROVINCE
            </label>

            <div style="float: right; display: inline-block;width: 166px;">

                <select id="Addresses_Province" name="Addresses[0].Province" class="chzn input-box" required="required" style="width: 100%;">
                    <option value="-- select">-- select</option>
                    @foreach (int p in Enum.GetValues(typeof(Province)))
                    {
                        string text = ((Province)p).GetDisplayText();

                        if (text.ToLower() == "all")
                        {
                            continue;
                        }

                        string sel = (p == (int?)address?.Province) ? "selected=selected" : "";

                        <option value="@p" @sel>@text</option>
                    }
                </select>

            </div>

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.Addresses.FirstOrDefault().Province)

        </div>

        <div class="editor-field col-lg-12 padding-none">

            <label class="label-text">
                TOWN
            </label>

            @Html.TextBoxFor(model => model.Addresses[0].Town, new { @class = "input input-box", @placeholder = "Town" })

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.Addresses[0].Town)

        </div>

        <div class="editor-field col-lg-12 padding-none">
            <label class="label-text">
                ADDRESS
            </label>

            @Html.TextBoxFor(model => model.Addresses[0].AddressLine1, new { @class = "input input-box", @placeholder = "Enter Address Line 1" })

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.Addresses[0].Town)

        </div>

        <div class="editor-field col-lg-12 padding-none">

            <label style="display: inline-block; float: left; text-align: left; margin: 7px 0 0 0; color: #848484;">
                &nbsp;
            </label>

            @Html.TextBoxFor(model => model.Addresses[0].AddressLine2, new { @class = "input input-box", @placeholder = "Enter Address Line 2" })

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.Addresses[0].AddressLine2)
        </div>

        <div class="editor-field col-lg-12 padding-none">
            <label class="label-text">
                POSTAL CODE
            </label>

            <input id="Addresses_PostCode" name="Addresses[0].PostCode" type="text" class="input input-box" value="@address.PostalCode" required="required" placeholder="Enter Postal Code" />

            <div class="clear"></div>

            @Html.ValidationMessageFor(model => model.Addresses[0].PostalCode)
        </div>

        <!-- END: Address Details -->

        <div class="clear">&nbsp;</div>

        <div class="col-lg-12 editor-field option-check">
            You have read and agree with the
            <a href="@Url.Content( "~/Uploads/Documents/Terms-and-Conditions.pdf" )" target="_blank"><strong style="font-size: 14px;">Terms and Conditions</strong></a>
            of signing up?
            <label class="terms-check">
                <input id="IsAccpetedTC" name="IsAccpetedTC" value="True" type="checkbox" class="sign-up-check" onclick="signUpEnable()" />
            </label>
            <strong style="margin-left:10px;">  I agree</strong>
        </div>



        <div class="col-lg-12  editor-field option-check">
            <u>Preferred Method Of Correspondence</u>
            <label class="member-check">
                <input name="PrefferedEMAIL" value="1" type="radio" @((Model.PrefferedEMAIL == YesNo.Yes) ? "checked=checked" : "") style="margin-top: 1px;" /> Email
            </label>
            <label class="member-check">
                <input name="PrefferedEMAIL" value="0" type="radio" @((Model.PrefferedEMAIL == YesNo.No) ? "checked=checked" : "") style="margin-top: 1px;" /> CellPhone
            </label>
        </div>
    </div>

            <div class="col-lg-offset-1 col-lg-3 col-md-offset-1 col-md-3 col-sm-5 upload-div">
                <div class="editor-field" style="margin-bottom: 10px;">

                    <input class="upload-box padding-none" id="Files[0].File" name="Files[0].Name" type="file" value="" requaccacired="required" data-val-file="1" />
                    <input class="upload-box padding-none" id="Files[0].Name" name="Files[0].Name" type="hidden" value="ID/Passport" />
                    <input class="upload-box padding-none input" id="Files[0].Description" name="Files[0].Description" type="hidden" value="This is the ID/Passport uploaded picture" />
                    <div class="clear"></div>
                    <div class="col-md-12"><i for="Files[0].File" class="fa fa-upload" style="font-size: 58px; color: grey;"></i> <label for="Files[0].File" class="upload-label"> Upload Picture of ID/Passport</label></div>


                    @Html.ValidationMessageFor(model => model.Files.FirstOrDefault().File)

                </div>

                <div class="editor-field">

                    <input class="upload-box padding-none" id="Files[1].File" name="Files[1].File" type="file" value="" data-val-file="1" />
                    <input class="upload-box padding-none" id="Files[1].Name" name="Files[1].Name" type="hidden" value="SELFIE" />
                    <input class="upload-box padding-none input" id="Files[1].Description" name="Files[1].Description" type="hidden" value="This is the SELFIE uploaded picture" />
                    <div class="clear"></div>
                    <div class="col-md-12"><i class="fa fa-upload" style="font-size: 58px; color: grey;"></i> <label class="upload-label"> Upload a Selfie </label></div>


                    @Html.ValidationMessageFor(model => model.Files.FirstOrDefault().File)

                </div>

                <div class="editor-field">

                    <input class="upload-box padding-none" id="Files[2].File" name="Files[2].File" type="file" value="" data-val-file="1" />
                    <input class="upload-box padding-none" id="Files[2].Name" name="Files[2].Name" type="hidden" value="Signed Contract" />
                    <input class="upload-box padding-none input" id="Files[2].Description" name="Files[2].Description" type="hidden" value="This is a signed contract" />
                    <div class="clear"></div>
                    <div class="col-md-12"><i class="fa fa-upload" style="font-size: 58px; color: grey;"></i> <label class="upload-label"> Upload signed contract </label></div>

                    @Html.ValidationMessageFor(model => model.Files.FirstOrDefault().File)
                </div>
            </div>


            <div class="col-lg-12 col-sm-12">
                <div class="col-lg-12 col-md-12 col-sm-12 padding-none payment-heading">
                    Membership Payment
                </div>
                <div class="col-lg-12  editor-field option-check">
                    <u>PREFFERD METHOD OF PAYMENT</u>
                    <label class="card-check">
                        <input name="IsCREDIT" value="1" type="radio" @((Model.IsCREDIT == YesNo.Yes) ? "checked=checked" : "") style="margin-top: 1px;" /> Credit/Debit card
                    </label>
                    <label class="card-check">
                        <input name="IsCREDIT" value="0" type="radio" @((Model.IsCREDIT == YesNo.No) ? "checked=checked" : "") style="margin-top: 1px;" /> Debit Order
                    </label>
                </div>
                <div class="col-lg-7  col-md-7 col-sm-7 form-column-left padding-none">


                    <div class="editor-field">
                        <label class="label-text">
                            Account Holder
                        </label>

                        <input type="text" class="input input-box" name="BankDetails.Beneficiary" value="@bank.Beneficiary" placeholder="Account Holder" />

                        <div class="clear"></div>

                        @Html.ValidationMessageFor(model => model.BankDetails.Beneficiary)

                    </div>
                    <div class="editor-field">
                        <label class="label-text">
                            BRANCH CODE
                        </label>


                        <input id="BankDetails_Branch" name="BankDetails.Branch" type="text" class="input input-box" value="@bank.Branch" placeholder="Enter Branch Code" />

                        <div class="clear"></div>

                        @Html.ValidationMessageFor(model => model.BankDetails.Branch)
                    </div>

                    <div class="editor-field">
                        <label class="label-text">
                            ACCOUNT TYPE
                        </label>

                        <select class="chzn input-box" id="BankDetails_AccountType" name="BankDetails.AccountType">
                            <option value="--select"></option>

                            @foreach (int p in Enum.GetValues(typeof(BankAccountType)))
                            {
                                string text = ((BankAccountType)p).GetDisplayText();

                                if (text.ToLower() == "all" || text.ToLower() == "none")
                                {
                                    continue;
                                }

                                string sel = (p == (int?)bank?.AccountType) ? "selected=selected" : "";

                                <option value="@p" @sel>@text</option>
                            }

                        </select>

                        <div class="clear"></div>

                        @Html.ValidationMessageFor(model => model.BankDetails.AccountType)

                    </div>


                    <div class="clear"></div>

                    @Html.ValidationMessageFor(model => model.BankDetails.BankId)

                </div>



                @*<div class="editor-field" style="margin-top: 24px; padding-bottom: 10px; margin-bottom: 20px; border-bottom: 1px dashed #ddd;">

                        <p>
                            <strong style="font-size: 14px;">REWARDS MUST BE PAID TO:</strong>
                        </p>

                        <label style="display: inline-block; margin-right: 10%;">
                            <input id="PaymentMethod" name="PaymentMethod" type="radio" value="1" @( ( Model.PaymentMethod == PaymentMethod.Cell ) ? "checked=checked" : "" ) style="margin-top: 1px;" data-show-hide="1" data-show="#confirm-cell" data-hide="#bank-details" data-show-required="1" />
                            CELLPHONE WALLET
                        </label>

                        <label style="display: inline-block; margin-right: 2%;">
                            <input id="PaymentMethod" name="PaymentMethod" type="radio" value="2" @( ( Model.PaymentMethod == PaymentMethod.Bank ) ? "checked=checked" : "" ) style="margin-top: 1px;" data-show-hide="1" data-show="#bank-details" data-hide="#confirm-cell" data-show-required="1" />
                            Bank ACCOUNT
                        </label>

                        <div class="clear"></div>

                    </div>*@

                @*
                    <div class="editor-field">
                        <label class="label-text">
                            Bank ID
                        </label>

                        <div class="clear"></div>

                        <div style="float: right; width: 64%;">

                            <select class="chzn " id="BankDetails_BankId" name="BankDetails.BankId" data-bank="1" data-target="#BankDetails_Branch" style="width: 100%;">
                                <option value="">--select</option>

                                @foreach (Bank b in Model.BankOptions)
                                {
                                    string sel = (b.Id == (int?)bank?.BankId) ? "selected=selected" : "";

                                    <option value="@b.Id" @sel>@b.Description</option>
                                }

                            </select>

                        </div>
                *@

                @*<div class="editor-field">
                        <label style="display: inline-block; float: left; text-align: left; margin: 7px 0 0 0; color: #848484;">
                            ACCOUNT NUMBER
                        </label>

                        <input id="BankDetails_Account" name="BankDetails.Account" type="text" class="input" value="@bank.Account" placeholder="Enter Account Number" style="float: right; display: inline-block; width: 60%;" />

                        <div class="clear"></div>

                        @Html.ValidationMessageFor( model => model.BankDetails.Account )

                    </div>

                    <div class="editor-field">
                        <label style="display: inline-block; float: left; text-align: left; margin: 7px 0 0 0; color: #848484;">
                            BRANCH CODE
                        </label>

                        <input id="BankDetails_Branch" name="BankDetails.Branch" type="text" class="input" value="@bank.Branch" placeholder="Enter Branch Code" style="float: right; display: inline-block; width: 60%;" />

                        <div class="clear"></div>

                        @Html.ValidationMessageFor( model => model.BankDetails.Branch )
                    </div>*@

            </div>
            <p class="col-lg-12 col-sm-12 sign-up-button">

                <button id="signUp" class="btn btn-primary" disabled type="submit" value="Sign Up" style="background-color:rgba(0, 158, 15,0.1);">Sign Up</button>

                <span style="padding: 0 2px;">/</span>
                @Html.ActionLink("Sign In", "Login", new { }, new { @class = "uppercase" })
            </p>
        }

    </div>
</body>
