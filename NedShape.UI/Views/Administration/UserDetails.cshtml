@model User

@using NedShape.Core.Enums;
@using NedShape.Data.Models;

@{
    if ( ViewBag.IncludeLayout == null )
    {
        Layout = null;
    }

    ViewBag.Title = "Details";
    
    List<Image> images = ( ViewBag.Images != null ) ? ( List<Image> ) ViewBag.Images : new List<Image>() { };
    List<Address> addresses = ( ViewBag.Addresses != null ) ? ( List<Address> ) ViewBag.Addresses : new List<Address>() { };
    List<Document> documents = ( ViewBag.Documents != null ) ? ( List<Document> ) ViewBag.Documents : new List<Document>() { };
    List<BankDetail> banks = ( ViewBag.BankDetails != null ) ? ( List<BankDetail> ) ViewBag.BankDetails : new List<BankDetail>() { };
}

@if ( ViewBag.IncludeLayout != null )
{
    <h2>
        <img alt="i" src="@Url.Content( "~/images/info.png" )" />
        <span>User Details</span>
    </h2>
}

<div id="item-details" class="item-details" style="width: auto;">

    @if ( ViewBag.IncludeLayout == null )
    {
        <h2>
            <img alt="" src="@Url.Content( "~/images/info.png" )" />
            <span>User Details</span>
        </h2>
    }

    <div class="left" style="width: 45%; margin-right: 1%;">

        <div class="display-label">
            Name
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Name ) @Html.DisplayFor( model => model.Surname )
        </div>

        <div class="display-label">
            Id Number
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.IdNumber )
        </div>

        <div class="display-label">
            Date Of Birth
        </div>
        <div class="display-field">
            @Model.DateOfBirth.Value.ToShortDateString()
        </div>

        <div class="display-label">
            Tax Number
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.TaxNumber )
        </div>

        <div class="display-label">
            Status
        </div>
        <div class="display-field">
            @(( ( Status ) Model.Status ).GetDisplayText())
        </div>

        <div class="display-label">
            Role
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.UserRoles.FirstOrDefault().Role.Name )
        </div>

    </div>

    <div class="left grouped-area" style="width: 45%;">

        <p>
            <strong class="uppercase" style="color: #0a4237 !important;">CONTACT DETAILS</strong>
        </p>

        <div class="display-label">
            Email
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Email )
        </div>

        <div class="display-label">
            Cell
        </div>
        <div class="display-field">
            @Html.DisplayFor( model => model.Cell )
        </div>

        @if ( addresses != null && addresses.Any() )
        {
            <p>
                <strong class="uppercase" style="color: #0a4237 !important;">ADDRESS (@addresses.Count)</strong>
            </p>

            foreach ( Address item in addresses )
            {
                <div class="display-label">
                    Province
                </div>
                <div class="display-field">
                    @(( ( Province ) item.Province ).GetDisplayText())
                </div>

                <div class="display-label">
                    Town
                </div>
                <div class="display-field">
                    @item.Town
                </div>

                <div class="display-label">
                    Address Line 1
                </div>
                <div class="display-field">
                    @item.Addressline1
                </div>

                <div class="display-label">
                    Address Line 2
                </div>
                <div class="display-field">
                    @item.Addressline2
                </div>

                <div class="display-label">
                    Postal Code
                </div>
                <div class="display-field">
                    @item.PostalCode
                </div>
            }
        }

        @if ( banks != null && banks.Any() )
        {
            <p>
                <strong class="uppercase" style="color: #0a4237 !important;">Bank Details (@banks.Count)</strong>
            </p>


        }

        @if ( documents != null && documents.Any() )
        {
            <p>
                <strong class="uppercase" style="color: #0a4237 !important;">Documents (@documents.Count)</strong>
            </p>


        }

        @if ( images != null && images.Any() )
        {
            <p>
                <strong class="uppercase" style="color: #0a4237 !important;">Images (@images.Count)</strong>
            </p>


        }

    </div>

    <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px;">&nbsp;</div>

    @if ( ViewBag.IncludeLayout == null )
    {
        <p>
            @Html.ActionLink( "Edit", "EditUser", new { id = Model.Id }, new { @class = "edit", @data_edit = "1", @data_id = Model.Id, @data_target = "#tr-" + Model.Id + "-item" } )

            @if ( ViewBag.IncludeLayout == null )
            {
                <span style="padding: 0 5px;">/</span>
                <a data-cancel="1" data-target="#item-details" data-remove="tr.edit">Cancel</a>
            }
        </p>
    }

    @if ( ViewBag.IncludeLayout != null )
    {
        <div class="back-to-list">
            @Html.ActionLink( "Back to List", "Index" )
        </div>
    }

</div>
