@model NedShape.UI.Models.BroadcastViewModel

@using NedShape.Data.Models;
@using NedShape.Core.Models;

@{
    if ( ViewBag.IncludeLayout == null )
    {
        Layout = null;
    }

    ViewBag.Title = "Edit";
}


@Html.Partial( "_Notification" )

@using ( Html.BeginForm( "EditBroadcast", "Administration", FormMethod.Post, new { enctype = "multipart/form-data", @data_ajax_form = "1", @data_target = "#broadcasts", @class = "custom-validate", @style = "width: auto;" } ) )
{
    <div id="edit-item">

        <h2 class="uppercase" style="width: auto;">
            <img alt="" src="@Url.Content( "~/images/edit.png" )" />
            <span>Edit Broadcast</span>
        </h2>

        @Html.ValidationSummary( true )

        @Html.HiddenFor( model => model.Id )

        <div id="item-details" class="item-details" style="width: auto;">

            <div style="float: left; width: 48%; margin-right: 2%;">

                <div class="edit-label">
                    @Html.LabelFor( model => model.Message )
                </div>
                <div class="edit-field">
                    @Html.TextAreaFor( model => model.Message, 10, 10, new { @placeholder = "Enter your message", @style="height: 164px;" } )
                    @Html.ValidationMessageFor( model => model.Message )
                </div>

            </div>

            <div style="float: left; width: 48%; margin-right: 2%;">

                <div class="edit-label">
                    @Html.LabelFor( model => model.StartDate )
                </div>
                <div class="edit-field">
                    <input id="StartDate" name="StartDate" class="date-picker" data-val="true" data-val-date="The field Start Date must be a date." data-val-required="The Start Date field is required." placeholder="Select Broadcast Start Date" readonly="readonly" value="@(Model.StartDate.HasValue ? Model.StartDate.Value.ToString( "yyyy/MM/dd" ) : "-/-")" type="text" />
                    @Html.ValidationMessageFor( model => model.StartDate )
                </div>

                <div class="edit-label">
                    @Html.LabelFor( model => model.EndDate )
                </div>
                <div class="edit-field">
                    <input id="EndDate" name="EndDate" class="date-picker" data-val="true" data-val-date="The field End Date must be a date." data-val-required="The End Date field is required." placeholder="Select Broadcast End Date" readonly="readonly" value="@(Model.EndDate.HasValue ? Model.EndDate.Value.ToString( "yyyy/MM/dd" ) : "-/-")" type="text" />
                    @Html.ValidationMessageFor( model => model.EndDate )
                </div>

                <div class="edit-label">
                    @Html.LabelFor( model => model.Status )
                </div>
                <div class="edit-field">
                    @Html.EnumDropDownFor( model => model.Status, false, new { @class = "chzn", @style = "width: 98%;" } )
                    @Html.ValidationMessageFor( model => model.Status )
                </div>

            </div>
            
            <div class="clear" style="border-bottom: 1px dashed #ccc; margin-bottom: 20px;">&nbsp;</div>

            <p>
                <input id="save-btn" type="submit" value="Save" />
                <span style="padding: 0 5px;">/</span> <a data-cancel="1" data-target="#edit-item" data-remove="tr.edit">Cancel</a>
            </p>

        </div>
    
    </div>
}