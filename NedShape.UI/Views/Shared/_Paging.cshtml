@model PagingExtension

@using NedShape.Data.Models;

@{
    bool show = ViewBag.ShowSearch != null && ( bool ) ViewBag.ShowSearch;
    bool showExport = ViewBag.ShowExport != null && ( bool ) ViewBag.ShowExport;
    bool showCustom = ViewBag.ShowCustom != null && ( bool ) ViewBag.ShowCustom;

    string action = ViewBag.ViewName != null ? ( ( string ) ViewBag.ViewName ).ToLower().Replace( "_", "" ) : "";

    string controller = ( string ) ViewContext.RouteData.Values[ "controller" ];
}

<div class="paging-pieces">

    <div id="page-length" class="piece page-length">

        <label for="data-page-length" style="display: inline;">

            <span style="padding-right: 5px;">Show</span>

            <select id="data-page-length" data-page-length="1" data-target="#item-list" data-url="@Request.RawUrl">
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="500">500</option>
                <option value="1000">1000</option>
                <option value="10000">10000</option>
            </select>

            <span style="padding-left: 5px;">entries</span>

            <a rel="tipsyW" title="..choose the # of records to display">
                <i class="fa fa-info"></i>
            </a>

        </label>

        <label style="display: inline;">
            <a rel="tipsyW" title="...refresh list?" data-refresh="1" data-target="#@action">
                <i class="fa fa-refresh"></i>
            </a>
        </label>

        @if ( showExport )
        {
            <label style="display: inline;">
                <a data-append="1" target="_blank" href="@Url.Action( "Export", new { @type = action } )" data-type="@action" rel="tipsyW" title="...export to csv/excel?">
                    <i class="fa fa-file-excel-o"></i>
                    Export
                </a>
            </label>
        }

        <span>
            <span id="sort-loader"></span>
        </span>

    </div>

    <div id="page-search" class="piece page-search">

        @if ( showCustom )
        {
            <span style="text-align: center; display: inline-block;">
                <span class="custom-search-active-wrapper">
                    <span class="custom-search-active"><small>You're viewing a custom search, refresh page to cancel...</small></span>
                </span>
            </span>

            <span style="padding-left: 5px;">&nbsp;</span>

            <a id="data-page-search" rel="tipsyS" title="..perform a custom search?" class="do-custom-search" data-sticky-one="1" data-target="#@action #custom-search" data-t="/@controller/@action" data-trigger="click" data-arrow="center-right" data-title="Custom Search" data-callback="NS.UI.DataCustomSearch($(this), $('#sticky-one .search-query'));">
                <i class="fa fa-search"></i>
                Custom Search
            </a>
        }

    </div>

    <div id="page-count" class="piece page-count">
        <span class="total">Showing @Model.Start to @Model.Middle of @Model.Total entries</span>
    </div>

    <div id="page-navigation" class="piece page-navigation" data-target="#item-list" data-url="@Request.RawUrl">

        @{
            String showNext = Model.ShowNext ? "active" : "inactive";
            String showPrev = Model.ShowPrev ? "active" : "inactive";
        }

        @if ( Model.Total >= 0 )
        {
            <div class="paging" style="border: 0 none; padding: 0;">

                <span class="nav">
                    <a id="data-page-nav-previous" data-skip="@Model.PSkip" data-page="@Model.PPage" class="@showPrev">&laquo; Prev</a>
                    <span>&nbsp;</span>
                    <a id="data-page-nav-next" data-skip="@Model.NSkip" data-page="@Model.NPage" class="@showNext">Next &raquo;</a>
                </span>

                <div class="clear"></div>

            </div>
        }

    </div>

</div>
